{"ast":null,"code":"var _jsxFileName = \"/Users/new/Desktop/countries-info/src/components/Filters/Filters.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = _ref => {\n  _s();\n  let {\n    filterCountries\n  } = _ref;\n  const [region, setRegion] = useState('');\n  const options = [{\n    value: 'Africa',\n    label: 'Africa'\n  }, {\n    value: 'America',\n    label: 'America'\n  }, {\n    value: 'Asia',\n    label: 'Asia'\n  }, {\n    value: 'Europe',\n    label: 'Europe'\n  }, {\n    value: 'Oceania',\n    label: 'Oceania'\n  }];\n  useEffect(() => {\n    filterCountries(region);\n  }, [region]);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    isSearchable: false,\n    isClearable: true,\n    placeholder: \"Filter by Region\",\n    options: options,\n    onChange: value => setRegion(value === null || value === void 0 ? void 0 : value.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Filters, \"QRQdfcL0DZUZe3vckRPu7UDaXEM=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["useEffect","useState","Select","jsxDEV","_jsxDEV","Filters","_ref","_s","filterCountries","region","setRegion","options","value","label","isSearchable","isClearable","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/new/Desktop/countries-info/src/components/Filters/Filters.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport Select from 'react-select';\n\ntype Props = {\n    filterCountries: (region: string | undefined) => void;\n};\n\nconst Filters: FC<Props> = ({ filterCountries }) => {\n    const [region, setRegion] = useState<string>('');\n\n    const options = [\n        { value: 'Africa', label: 'Africa' },\n        { value: 'America', label: 'America' },\n        { value: 'Asia', label: 'Asia' },\n        { value: 'Europe', label: 'Europe' },\n        { value: 'Oceania', label: 'Oceania' },\n    ];\n\n    useEffect(() => {\n        filterCountries(region);\n    }, [region]);\n\n    return (\n        <Select\n            isSearchable={false}\n            isClearable={true}\n            placeholder=\"Filter by Region\"\n            options={options}\n            onChange={(value) => setRegion(value?.value)}\n        />\n    );\n};\n\nexport default Filters;\n"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlC,MAAMC,OAAkB,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAEhD,MAAMU,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EACtC;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CACzC;EAEDb,SAAS,CAAC,MAAM;IACZQ,eAAe,CAACC,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA,CAACF,MAAM;IACHY,YAAY,EAAE,KAAM;IACpBC,WAAW,EAAE,IAAK;IAClBC,WAAW,EAAC,kBAAkB;IAC9BL,OAAO,EAAEA,OAAQ;IACjBM,QAAQ,EAAGL,KAAK,IAAKF,SAAS,CAACE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEA,KAAK;EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBIF,OAAkB;AAAAiB,EAAA,GAAlBjB,OAAkB;AA0BxB,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}